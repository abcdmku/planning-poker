{
  "schemaVersion": 2,
  "dockerfileLines": [
    "# Build stage",
    "FROM node:20-alpine AS builder",
    "",
    "WORKDIR /app",
    "",
    "# Copy package files",
    "COPY package*.json ./",
    "",
    "# Install dependencies",
    "RUN npm ci",
    "",
    "# Copy source code",
    "COPY . .",
    "",
    "# Build the Vite application (creates dist folder)",
    "RUN npm run build",
    "",
    "# Production stage",
    "FROM node:20-alpine",
    "",
    "# Install PM2 globally for process management",
    "RUN npm install -g pm2",
    "",
    "WORKDIR /app",
    "",
    "# Copy package files and install production dependencies",
    "COPY package*.json ./",
    "RUN npm ci --production && npm install tsx express http-proxy-middleware",
    "",
    "# Copy built frontend from builder",
    "COPY --from=builder /app/dist ./dist",
    "",
    "# Copy socket server and its dependencies",
    "COPY socket-server.ts ./",
    "COPY tsconfig.json ./",
    "COPY src/server ./src/server",
    "COPY src/lib/socket.types.ts ./src/lib/socket.types.ts",
    "",
    "",
    "# Create a simple Express server that serves the frontend and proxies socket requests",
    "RUN echo 'import express from \"express\";' > server.js && \\",
    "    echo 'import { createProxyMiddleware } from \"http-proxy-middleware\";' >> server.js && \\",
    "    echo 'import path from \"path\";' >> server.js && \\",
    "    echo 'import { fileURLToPath } from \"url\";' >> server.js && \\",
    "    echo '' >> server.js && \\",
    "    echo 'const __filename = fileURLToPath(import.meta.url);' >> server.js && \\",
    "    echo 'const __dirname = path.dirname(__filename);' >> server.js && \\",
    "    echo '' >> server.js && \\",
    "    echo 'const app = express();' >> server.js && \\",
    "    echo 'const PORT = process.env.PORT || 80;' >> server.js && \\",
    "    echo '' >> server.js && \\",
    "    echo '// Proxy socket.io requests to the socket server' >> server.js && \\",
    "    echo 'app.use(\"/socket.io\", createProxyMiddleware({' >> server.js && \\",
    "    echo '  target: \"http://localhost:3001\",' >> server.js && \\",
    "    echo '  ws: true,' >> server.js && \\",
    "    echo '  changeOrigin: true' >> server.js && \\",
    "    echo '}));' >> server.js && \\",
    "    echo '' >> server.js && \\",
    "    echo '// Serve static files' >> server.js && \\",
    "    echo 'app.use(express.static(\"dist\"));' >> server.js && \\",
    "    echo '' >> server.js && \\",
    "    echo '// Handle client-side routing' >> server.js && \\",
    "    echo 'app.get(\"*\", (req, res) => {' >> server.js && \\",
    "    echo '  res.sendFile(path.join(__dirname, \"dist\", \"index.html\"));' >> server.js && \\",
    "    echo '});' >> server.js && \\",
    "    echo '' >> server.js && \\",
    "    echo 'app.listen(PORT, () => {' >> server.js && \\",
    "    echo '  console.log(`Server running on port ${PORT}`);' >> server.js && \\",
    "    echo '});' >> server.js",
    "",
    "# Create PM2 ecosystem file",
    "RUN echo '{' > ecosystem.config.json && \\",
    "    echo '  \"apps\": [' >> ecosystem.config.json && \\",
    "    echo '    {' >> ecosystem.config.json && \\",
    "    echo '      \"name\": \"frontend\",' >> ecosystem.config.json && \\",
    "    echo '      \"script\": \"node\",' >> ecosystem.config.json && \\",
    "    echo '      \"args\": \"server.js\",' >> ecosystem.config.json && \\",
    "    echo '      \"env\": {' >> ecosystem.config.json && \\",
    "    echo '        \"PORT\": 80' >> ecosystem.config.json && \\",
    "    echo '      }' >> ecosystem.config.json && \\",
    "    echo '    },' >> ecosystem.config.json && \\",
    "    echo '    {' >> ecosystem.config.json && \\",
    "    echo '      \"name\": \"socket-server\",' >> ecosystem.config.json && \\",
    "    echo '      \"script\": \"npx\",' >> ecosystem.config.json && \\",
    "    echo '      \"args\": \"tsx socket-server.ts\",' >> ecosystem.config.json && \\",
    "    echo '      \"env\": {' >> ecosystem.config.json && \\",
    "    echo '        \"SOCKET_PORT\": 3001' >> ecosystem.config.json && \\",
    "    echo '      }' >> ecosystem.config.json && \\",
    "    echo '    }' >> ecosystem.config.json && \\",
    "    echo '  ]' >> ecosystem.config.json && \\",
    "    echo '}' >> ecosystem.config.json",
    "",
    "# Expose only port 80 for CapRover",
    "EXPOSE 80",
    "",
    "# Start both services with PM2",
    "CMD [\"pm2-runtime\", \"start\", \"ecosystem.config.json\"]"
  ]
}